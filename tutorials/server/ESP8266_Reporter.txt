#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClient.h>
#include <ArduinoJson.h>

const char* ssid = "TPLINK";
const char* password = "abcd1234";
const char* host = "192.168.1.104";
const int httpPort = 80;

IPAddress ip(192, 168, 1, 120);
IPAddress gateway(192, 168, 1, 1);
IPAddress subnet(255, 255, 255, 0);

const String postPath = "/report";
const String getPath  = "/report";

void setup() {
  Serial.begin(115200);
  WiFi.config(ip, gateway, subnet);
  WiFi.begin(ssid, password);

  Serial.println("Connecting to WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nConnected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
  Serial.print("MAC Address: ");
  Serial.println(WiFi.macAddress());
}

void loop() {
  if (Serial.available()) {
    String input = Serial.readStringUntil('\n');
    input.trim();

    if (input.startsWith("#") && input.endsWith("*")) {
      input = input.substring(1, input.length() - 1);

      if (input.startsWith("GET:")) {
        String requestedKey = input.substring(4);

        if (WiFi.status() == WL_CONNECTED) {
          HTTPClient http;
          WiFiClient client;
          String url = "http://" + String(host) + getPath;
          http.begin(client, url);

          int httpCode = http.GET();
          if (httpCode > 0) {
            String payload = http.getString();
            payload.trim();

            StaticJsonDocument<512> doc;
            DeserializationError error = deserializeJson(doc, payload);
            if (!error && doc.containsKey(requestedKey)) {
              String valueStr = doc[requestedKey].as<String>();
              Serial.print(requestedKey + ":" + valueStr + "\r\n");
            } else {
              Serial.print(requestedKey + ":?\r\n");
            }
          } else {
            Serial.println("HTTP GET failed, code: " + String(httpCode));
          }

          http.end();
          delay(100);
        } else {
          Serial.println("WiFi not connected");
        }

      } else {
        int sepIndex = input.indexOf(":");
        if (sepIndex > 0) {
          String key = input.substring(0, sepIndex);
          String value = input.substring(sepIndex + 1);

          String json = "{\"" + key + "\": \"" + value + "\"}";

          WiFiClient client;
          if (!client.connect(host, httpPort)) {
            Serial.println("Connection failed");
            return;
          }

          client.print(String("POST ") + postPath + " HTTP/1.1\r\n" +
                       "Host: " + host + "\r\n" +
                       "Content-Type: application/json\r\n" +
                       "Content-Length: " + json.length() + "\r\n" +
                       "Connection: close\r\n\r\n" +
                       json);

          while (client.available()) {
            client.read();
          }

          client.stop();
        }
      }
    }
  }
}
